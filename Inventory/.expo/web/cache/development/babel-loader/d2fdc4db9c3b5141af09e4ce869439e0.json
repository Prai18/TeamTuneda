{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/hiraidaichi/Desktop/ReactNative/Inventory/LoginForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { JSHash, JSHmac, CONSTANTS } from \"react-native-hash\";\nvar config = {\n  apiKey: \"AIzaSyCnLorva6IteJoYG_gJ97YSzI4RLA1wYB0\",\n  authDomain: \"reactnative-firebase-751e9.firebaseapp.com\",\n  databaseURL: \"https://reactnative-firebase-751e9.firebaseio.com\",\n  projectId: \"reactnative-firebase-751e9\",\n  storageBucket: \"reactnative-firebase-751e9.appspot.com\",\n  messagingSenderId: \"202410725465\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nvar db = firebase.firestore();\n\nvar LoginForm = function (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      error: '',\n      loading: false,\n      hash: ''\n    };\n\n    _this.onButtonPress = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n\n      _this.setState({\n        error: '',\n        loading: true\n      });\n\n      firebase.auth().signInWithEmailAndPassword(email, password).then(_this.onLoginSuccess.bind(_assertThisInitialized(_this))).catch(function () {\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(_this.onLoginSuccess.bind(_assertThisInitialized(_this))).catch(_this.onLoginFail.bind(_assertThisInitialized(_this)));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"hash\",\n    value: function hash(email, password) {\n      var _this2 = this;\n\n      JSHmac(email, password, CONSTANTS.HmacAlgorithms.HmacSHA256).then(function (hash) {\n        return db.collection(hash).add({\n          email: _this2.state.email,\n          password: _this2.state.password\n        }).then(function (docRef) {\n          console.log(\"Document written with ID: \", docRef.id);\n        }).catch(function (error) {\n          console.error(\"Error adding document: \", error);\n        });\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    }\n  }, {\n    key: \"onLoginSuccess\",\n    value: function onLoginSuccess() {\n      this.setState({\n        loading: false,\n        error: ''\n      });\n      return this.hash(this.state.email, this.state.password);\n    }\n  }, {\n    key: \"onLoginFail\",\n    value: function onLoginFail() {\n      this.setState({\n        loading: false,\n        error: 'Authentication Failed'\n      });\n    }\n  }, {\n    key: \"loadSpinner\",\n    value: function loadSpinner() {\n      if (this.state.loading) {\n        return React.createElement(ActivityIndicator, {\n          size: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.onButtonPress,\n        style: styles.buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, \"\\u30ED\\u30B0\\u30A4\\u30F3\")), React.createElement(TouchableOpacity, {\n        onPress: this.onButtonPress,\n        style: styles.buttonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, \"\\u65B0\\u898F\\u767B\\u9332\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        placeholder: \"user@gmail.com\",\n        autoCorrect: false,\n        value: this.state.email,\n        onChangeText: function onChangeText(email) {\n          return _this3.setState({\n            email: email\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.wrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        placeholder: \"password\",\n        autoCorrect: false,\n        value: this.state.password,\n        onChangeText: function onChangeText(password) {\n          return _this3.setState({\n            password: password\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      })), React.createElement(View, {\n        style: styles.wrap,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, this.loadSpinner()));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nvar styles = {\n  wrap: {\n    padding: 10\n  },\n  textStyle: {\n    alignSelf: 'center',\n    color: '#ff9f',\n    fontSize: 16,\n    fontWeight: '600',\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  buttonStyle: {\n    flex: 1,\n    alignSelf: 'stretch',\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#007aff'\n  },\n  inputStyle: {\n    color: '#000',\n    paddingRight: 5,\n    paddingLeft: 5,\n    fontSize: 18,\n    lineHeight: 23,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#333'\n  }\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/hiraidaichi/Desktop/ReactNative/Inventory/LoginForm.js"],"names":["React","firebase","JSHash","JSHmac","CONSTANTS","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","apps","length","initializeApp","db","firestore","LoginForm","state","email","password","error","loading","hash","onButtonPress","setState","auth","signInWithEmailAndPassword","then","onLoginSuccess","bind","catch","createUserWithEmailAndPassword","onLoginFail","HmacAlgorithms","HmacSHA256","collection","add","docRef","console","log","id","e","styles","buttonStyle","wrap","loadSpinner","Component","padding","textStyle","alignSelf","color","fontSize","fontWeight","paddingBottom","paddingTop","flex","backgroundColor","borderRadius","borderWidth","borderColor","inputStyle","paddingRight","paddingLeft","lineHeight","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, TouchableOpacity, Text, TextInput, ActivityIndicator } from 'react-native';\nimport firebase from 'firebase/app';                  //ここ書き方修正\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { JSHash, JSHmac, CONSTANTS } from \"react-native-hash\";\n\n\nconst config = {\n  apiKey: \"AIzaSyCnLorva6IteJoYG_gJ97YSzI4RLA1wYB0\",\n  authDomain: \"reactnative-firebase-751e9.firebaseapp.com\",\n  databaseURL: \"https://reactnative-firebase-751e9.firebaseio.com\",\n  projectId: \"reactnative-firebase-751e9\",\n  storageBucket: \"reactnative-firebase-751e9.appspot.com\",\n  messagingSenderId: \"202410725465\"\n};\n\n\n// firebase.initializeApp(config);   //データベースの初期化\nif (!firebase.apps.length) {         //この条件式がないと更新のたびに複数回呼び出してエラーがでる\n    firebase.initializeApp(config);\n}\n\nconst db = firebase.firestore();\n\n\n\nclass LoginForm extends React.Component {\n\n\n\nstate = {\n  email: '',\n  password: '',\n  error: '',\n  loading: false,\n  hash:'',\n};\n\n  onButtonPress=()=> {                    \n    const { email, password } = this.state;\n    this.setState({error: '', loading: true});\n\n    firebase.auth().signInWithEmailAndPassword(email, password) //ログインの成功\n      .then((this.onLoginSuccess.bind(this)))\n      .catch(() => {\n        firebase.auth().createUserWithEmailAndPassword(email, password) //新規登録\n          .then((this.onLoginSuccess.bind(this)))\n          .catch((this.onLoginFail.bind(this)));\n      });\n  }\n\n\nhash(email,password){   //ログインが成功したときに呼ばれ、個別のデータベースを作る\n  JSHmac(email,password, CONSTANTS.HmacAlgorithms.HmacSHA256)\n  .then(hash => db.collection(hash).add({\n      email:this.state.email,\n      password: this.state.password,\n  })\n  .then(function(docRef) {\n      console.log(\"Document written with ID: \", docRef.id);\n  })\n  .catch(function(error) {\n      console.error(\"Error adding document: \", error);\n  })\n)\n  .catch(e => console.log(e));\n};\n\n  onLoginSuccess() {\n    this.setState({\n      loading: false,\n      error: ''\n    });\n    return(\n    this.hash(this.state.email,this.state.password)\n  )\n  }\n\n  onLoginFail() {\n    this.setState({\n      loading: false,\n      error: 'Authentication Failed'\n    });\n  }\n\n  loadSpinner() {\n    if (this.state.loading) {\n      return <ActivityIndicator size=\"small\" />\n    }\n\n    return (//Reactのコンポーネントはトップレベル（一番上の階層）で1つにする必要があるから<div>でひとつにまとめてる\n      <div>\n      <TouchableOpacity onPress={this.onButtonPress} style={styles.buttonStyle}>\n        <Text>\n        ログイン\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={this.onButtonPress} style={styles.buttonStyle}>\n        <Text>\n        新規登録\n        </Text>\n      </TouchableOpacity>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <View>\n        <View>\n          <TextInput\n              placeholder=\"user@gmail.com\"\n              autoCorrect={false}\n              value={this.state.email}\n              onChangeText={email => this.setState({ email })}\n            />\n        </View>\n        <View style={styles.wrap}>\n          <TextInput\n              secureTextEntry\n              placeholder=\"password\"\n              autoCorrect={false}\n              value={this.state.password}\n              onChangeText={password => this.setState({ password })}\n            />\n        </View>\n\n        <View style={styles.wrap}>\n          {this.loadSpinner()}\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = {\n  // スタイルを記述\n  wrap: {\n    padding: 10\n  },\n  textStyle: {\n    alignSelf: 'center',\n    color: '#ff9f',\n    fontSize: 16,\n    fontWeight: '600',\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  buttonStyle: {\n    flex:1,\n    alignSelf: 'stretch',\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: '#007aff'\n  },\n  inputStyle: {\n    color: '#000',\n    paddingRight: 5,\n    paddingLeft: 5,\n    fontSize: 18,\n    lineHeight: 23,\n    height: 30,\n    borderWidth: 1,\n    borderColor: '#333'\n  }\n}\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}